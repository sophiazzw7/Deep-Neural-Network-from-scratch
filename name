/****************************************************************************
 * Full runnable code: data‐quality checks + Somers’ D for four segments
 * Assumes formats pts1a. and pts2a. are already defined in your session.
 ****************************************************************************/

/*====================*/
/* 1. Secured, CIDS+V4 */
/*====================*/
data sc_sec_scored_CIDS_V4;
  set sc_sec_data;
  where CIDS_COMM_flg = 'NOT MISSING'
    and Vantage_flg    = 'NOT MISSING'
    and bad60_24m ne .;
  pts_CIDSC = input(put(CIDS_COMM_score, pts1a.), best12.);
  pts_V4    = input(put(Vantage4_score,     pts2a.), best12.);
  pts_ttl   = sum(pts_CIDSC, pts_V4);
  /* wt is carried from sc_sec_data */
run;

/*--- data quality ---*/
proc sql;
  select count(*) as num_rows
  from sc_sec_scored_CIDS_V4;
quit;

proc sort data=sc_sec_scored_CIDS_V4
          out=_dup1 nodupkey dupout=_dups1;
  by application_nbr applicant_nbr;
run;

proc sql;
  select count(*) as num_dups
  from _dups1;
quit;

proc means data=sc_sec_scored_CIDS_V4 n nmiss min max;
  var bad60_24m CIDS_COMM_score Vantage4_score pts_ttl wt;
run;

/*--- Somers' D ---*/
proc logistic data=sc_sec_scored_CIDS_V4 noprint;
  model bad60_24m(event='1') = pts_ttl;
  weight wt;
  ods output Association=assoc1;
run;

data somers1;
  set assoc1;
  if Label2 = "Somers' D" then do;
    somers_d = input(cValue2, best12.);
    output;
  end;
  keep somers_d;
run;

proc print data=somers1 noobs label;
  var somers_d;
  title "Somers' D for Secured CIDS+V4";
run;


/*====================*/
/* 2. Secured, V4 only */
/*====================*/
data sc_sec_scored_V4;
  set sc_sec_data;
  where CIDS_COMM_flg = 'MISSING'
    and Vantage_flg    = 'NOT MISSING'
    and bad60_24m ne .;
  pts_V4  = input(put(Vantage4_score, pts2a.), best12.);
  pts_ttl = pts_V4;
run;

/*--- data quality ---*/
proc sql;
  select count(*) as num_rows
  from sc_sec_scored_V4;
quit;

proc sort data=sc_sec_scored_V4
          out=_dup2 nodupkey dupout=_
