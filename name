/*****************************************************************************
* MANUAL Somers' D via AUC (trapezoidal) — robust, no PROC LOGISTIC needed
*   - Works with fractional weight wt
*   - Handles any distribution of scores and events
* Usage:
*   1.  Filter to your “booked” slice if desired
*   2.  Rename (or set) into a working table called ROC_IN
*****************************************************************************/

/* --- Example: filter to booked records for Secured CIDS+V4 ------------- */
data ROC_IN;
  set sc_sec_scored_CIDS_V4;
  where booked_flg='Y' and bad60_24m in (0,1) and not missing(pts_ttl);
run;

/* --- Step 1: Compute total weighted goods and bads --------------------- */
proc sql noprint;
  select sum(wt*(bad60_24m=1)) into :TOTAL_BAD  from ROC_IN;
  select sum(wt*(bad60_24m=0)) into :TOTAL_GOOD from ROC_IN;
quit;

/* --- Step 2: Aggregate by unique score, sort descending --------------- */
proc sql;
  create table ROC_DATA as
  select pts_ttl,
         sum(wt*(bad60_24m=1)) as bad_wt,
         sum(wt*(bad60_24m=0)) as good_wt
  from ROC_IN
  group by pts_ttl
  order by descending pts_ttl;
quit;

/* --- Step 3: Build cumulative TPR/FPR and trapezoidal area ---------- */
data ROC_CURVE;
  set ROC_DATA;
  retain cum_bad cum_good prev_FPR prev_TPR AUC 0;
  /* accumulate */
  cum_bad  + bad_wt;
  cum_good + good_wt;
  /* true positive rate (sensitivity) and false positive rate */
  TPR = cum_bad  / &TOTAL_BAD;
  FPR = cum_good / &TOTAL_GOOD;
  /* trapezoid from prior point */
  if _n_ > 1 then AUC + ( (FPR - prev_FPR) * (TPR + prev_TPR) / 2 );
  /* save for next iteration */
  prev_FPR = FPR;
  prev_TPR = TPR;
run;

/* --- Step 4: Extract final AUC and compute Somers' D ----------------- */
data SOMERS_D;
  set ROC_CURVE end=eof;
  if eof then do;
    AUC_value    = AUC;
    Somers_D     = 2*AUC - 1;
    output;
  end;
  keep AUC_value Somers_D;
run;

/* --- Step 5: Print results ------------------------------------------- */
proc print data=SOMERS_D noobs label width=minimum;
  var AUC_value Somers_D;
  label 
    AUC_value = "Area Under Curve (AUC)"
    Somers_D  = "Somers' D = 2*AUC-1";
  format AUC_value Somers_D 6.3;
  title "Manual AUC & Somers' D (booked population)";
run;
