To **split your large file into smaller parts** (each under **10MB**) and upload them separately into SAS Studio, follow these steps:

---

## **Step 1: Split the File on Your Local Machine**
### **Using Python (Recommended)**
If you have Python installed, you can use **pandas** to split your large dataset into smaller chunks.

```python
import pandas as pd

# Load the full dataset
file_path = "your_large_file.csv"  # Replace with your file path
chunk_size = 50000  # Adjust based on file size; try different values if needed

df = pd.read_csv(file_path, chunksize=chunk_size)

# Save smaller files
for i, chunk in enumerate(df):
    chunk.to_csv(f"small_part_{i+1}.csv", index=False)  # Saves small CSV files
```

This will generate **small_part_1.csv, small_part_2.csv, ..., small_part_n.csv** files.

---

### **Alternative: Use a Command Line Tool (Mac/Linux)**
If you are using Mac or Linux, you can split the CSV using the **split** command:

```sh
split -l 50000 your_large_file.csv part_
```
This will create `part_aa`, `part_ab`, `part_ac`, etc. Rename them to `.csv` files before uploading.

---

## **Step 2: Upload the Smaller Files to SAS Studio**
1. **Go to SAS Studio** â†’ Click on **Server Files and Folders**.
2. **Upload each smaller CSV file**.

---

## **Step 3: Read and Merge the Files in SAS**
Once you have uploaded the files, merge them using **DATA step**.

```sas
data final_dataset;
    set small_part_1 small_part_2 small_part_3; /* Add all uploaded dataset names */
run;
```

If you use `PROC IMPORT`, make sure each dataset is created first:

```sas
proc import datafile="/home/user/small_part_1.csv"
    out=small_part_1 dbms=csv replace;
    getnames=yes;
run;

proc import datafile="/home/user/small_part_2.csv"
    out=small_part_2 dbms=csv replace;
    getnames=yes;
run;

data final_dataset;
    set small_part_1 small_part_2;  /* Include all files */
run;
```

---

## **Step 4: Verify the Data**
After merging, check if everything is loaded properly:

```sas
proc contents data=final_dataset; run;
proc print data=final_dataset (obs=10); run;  /* Print first 10 rows */
```

---

### **Next Steps**
- If your dataset has a **header row**, ensure it appears only once in the final dataset.
- If SAS complains about **column mismatches**, check the imported datasets (`proc contents`) and make sure column names match.

Would you like help adjusting the split size or checking for any merging issues? ðŸš€
